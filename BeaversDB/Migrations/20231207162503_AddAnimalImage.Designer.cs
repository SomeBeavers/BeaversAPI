// <auto-generated />
using System;
using BeaversDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeaversDB.Migrations
{
    [DbContext(typeof(AnimalContext))]
    [Migration("20231207162503_AddAnimalImage")]
    partial class AddAnimalImage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdditionalInfoClub", b =>
                {
                    b.Property<int>("AdditionalInfosId")
                        .HasColumnType("int");

                    b.Property<int>("ClubsId")
                        .HasColumnType("int");

                    b.HasKey("AdditionalInfosId", "ClubsId");

                    b.HasIndex("ClubsId");

                    b.ToTable("AdditionalInfoClub");
                });

            modelBuilder.Entity("BeaversDB.Model.AdditionalInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AdditionalInfos", (string)null);
                });

            modelBuilder.Entity("BeaversDB.Model.AdditionalInfoDetailed", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("DetailedSummary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AdditionalInfos", (string)null);
                });

            modelBuilder.Entity("BeaversDB.Model.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("HatedById")
                        .HasColumnType("int");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("IpAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<int?>("LovedById")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("HatedById");

                    b.HasIndex("JobId");

                    b.HasIndex("LovedById");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Animals", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("BeaversDB.Model.AnimalClub", b =>
                {
                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublicationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("AnimalId", "ClubId");

                    b.HasIndex("ClubId");

                    b.ToTable("AnimalClub");
                });

            modelBuilder.Entity("BeaversDB.Model.AnimalLocation", b =>
                {
                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("AnimalLocation");
                });

            modelBuilder.Entity("BeaversDB.Model.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("BeaversDB.Model.Drawback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drawbacks");
                });

            modelBuilder.Entity("BeaversDB.Model.Elf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeerId");

                    b.ToTable("Elves");
                });

            modelBuilder.Entity("BeaversDB.Model.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId")
                        .IsUnique()
                        .HasFilter("[AnimalId] IS NOT NULL");

                    b.ToTable("Food");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Food");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("BeaversDB.Model.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdditionalInfoId")
                        .HasColumnType("int");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TheGrade")
                        .HasColumnType("decimal(3, 2)");

                    b.HasKey("Id");

                    b.HasIndex("AdditionalInfoId");

                    b.HasIndex("AnimalId");

                    b.HasIndex("ClubId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("BeaversDB.Model.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("BeaversDB.Model.JobDrawback", b =>
                {
                    b.Property<int>("JobId")
                        .HasColumnType("int");

                    b.Property<int>("DrawbackId")
                        .HasColumnType("int");

                    b.HasKey("JobId", "DrawbackId");

                    b.HasIndex("DrawbackId");

                    b.ToTable("JobDrawbacks");
                });

            modelBuilder.Entity("BeaversDB.Model.MapToQuery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<int>("Fluffiness")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.ToTable("MapToQuery");

                    b.ToSqlQuery("    select b.Id, b.Fluffiness, b.Size, ac.ClubId as ClubId from Beavers b\r\n                              inner join AnimalClub ac on b.Id = ac.AnimalId\r\n                              Union all\r\n                              select cr.Id, 2, 1, ac.ClubId as ClubId  from Crows cr\r\n                              inner join AnimalClub ac on cr.Id = ac.AnimalId\r\n                    ");
                });

            modelBuilder.Entity("BeaversDB.Model.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FoodId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FoodId")
                        .IsUnique()
                        .HasFilter("[FoodId] IS NOT NULL");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("ClubDrawback", b =>
                {
                    b.Property<int>("ClubsId")
                        .HasColumnType("int");

                    b.Property<int>("DrawbacksId")
                        .HasColumnType("int");

                    b.HasKey("ClubsId", "DrawbacksId");

                    b.HasIndex("DrawbacksId");

                    b.ToTable("ClubDrawback");
                });

            modelBuilder.Entity("DrawbackFood", b =>
                {
                    b.Property<int>("DrawbacksId")
                        .HasColumnType("int");

                    b.Property<int>("FoodsId")
                        .HasColumnType("int");

                    b.HasKey("DrawbacksId", "FoodsId");

                    b.HasIndex("FoodsId");

                    b.ToTable("DrawbackFood");
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("BeaversDB.Model.Beaver", b =>
                {
                    b.HasBaseType("BeaversDB.Model.Animal");

                    b.Property<int>("Fluffiness")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.ToTable("Beavers", (string)null);
                });

            modelBuilder.Entity("BeaversDB.Model.Crow", b =>
                {
                    b.HasBaseType("BeaversDB.Model.Animal");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Crows", (string)null);
                });

            modelBuilder.Entity("BeaversDB.Model.Deer", b =>
                {
                    b.HasBaseType("BeaversDB.Model.Animal");

                    b.Property<bool>("Horns")
                        .HasColumnType("bit");

                    b.ToTable("Deers", (string)null);
                });

            modelBuilder.Entity("BeaversDB.Model.NormalFood", b =>
                {
                    b.HasBaseType("BeaversDB.Model.Food");

                    b.Property<int>("Taste")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("NormalFood");
                });

            modelBuilder.Entity("BeaversDB.Model.VeganFood", b =>
                {
                    b.HasBaseType("BeaversDB.Model.Food");

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("VeganFood");
                });

            modelBuilder.Entity("AdditionalInfoClub", b =>
                {
                    b.HasOne("BeaversDB.Model.AdditionalInfo", null)
                        .WithMany()
                        .HasForeignKey("AdditionalInfosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeaversDB.Model.Club", null)
                        .WithMany()
                        .HasForeignKey("ClubsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeaversDB.Model.AdditionalInfoDetailed", b =>
                {
                    b.HasOne("BeaversDB.Model.AdditionalInfo", null)
                        .WithOne("AdditionalInfoDetailed")
                        .HasForeignKey("BeaversDB.Model.AdditionalInfoDetailed", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeaversDB.Model.Animal", b =>
                {
                    b.HasOne("BeaversDB.Model.Person", "HatedBy")
                        .WithMany("AnimalsHated")
                        .HasForeignKey("HatedById");

                    b.HasOne("BeaversDB.Model.Job", "Job")
                        .WithMany("Animals")
                        .HasForeignKey("JobId");

                    b.HasOne("BeaversDB.Model.Person", "LovedBy")
                        .WithMany("AnimalsLoved")
                        .HasForeignKey("LovedById");

                    b.Navigation("HatedBy");

                    b.Navigation("Job");

                    b.Navigation("LovedBy");
                });

            modelBuilder.Entity("BeaversDB.Model.AnimalClub", b =>
                {
                    b.HasOne("BeaversDB.Model.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeaversDB.Model.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Club");
                });

            modelBuilder.Entity("BeaversDB.Model.Club", b =>
                {
                    b.OwnsMany("BeaversDB.Model.Location", "Locations", b1 =>
                        {
                            b1.Property<int>("ClubId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ClubId", "Id");

                            b1.ToTable("Location");

                            b1.WithOwner("Club")
                                .HasForeignKey("ClubId");

                            b1.Navigation("Club");
                        });

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("BeaversDB.Model.Drawback", b =>
                {
                    b.OwnsOne("BeaversDB.Model.Consequence", "Consequence", b1 =>
                        {
                            b1.Property<int>("DrawbackId")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DrawbackId");

                            b1.ToTable("Drawbacks");

                            b1.WithOwner()
                                .HasForeignKey("DrawbackId");
                        });

                    b.Navigation("Consequence")
                        .IsRequired();
                });

            modelBuilder.Entity("BeaversDB.Model.Elf", b =>
                {
                    b.HasOne("BeaversDB.Model.Deer", "Deer")
                        .WithMany("Elves")
                        .HasForeignKey("DeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deer");
                });

            modelBuilder.Entity("BeaversDB.Model.Food", b =>
                {
                    b.HasOne("BeaversDB.Model.Animal", "Animal")
                        .WithOne("Food")
                        .HasForeignKey("BeaversDB.Model.Food", "AnimalId");

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("BeaversDB.Model.Grade", b =>
                {
                    b.HasOne("BeaversDB.Model.AdditionalInfo", null)
                        .WithMany("Grades")
                        .HasForeignKey("AdditionalInfoId");

                    b.HasOne("BeaversDB.Model.Animal", "Animal")
                        .WithMany("Grades")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeaversDB.Model.Club", "Club")
                        .WithMany("Grades")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Club");
                });

            modelBuilder.Entity("BeaversDB.Model.JobDrawback", b =>
                {
                    b.HasOne("BeaversDB.Model.Drawback", "Drawback")
                        .WithMany("JobDrawbacks")
                        .HasForeignKey("DrawbackId")
                        .IsRequired();

                    b.HasOne("BeaversDB.Model.Job", "Job")
                        .WithMany("JobDrawbacks")
                        .HasForeignKey("JobId")
                        .IsRequired();

                    b.Navigation("Drawback");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("BeaversDB.Model.MapToQuery", b =>
                {
                    b.HasOne("BeaversDB.Model.Club", "Club")
                        .WithMany()
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Club");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.HasOne("BeaversDB.Model.Food", null)
                        .WithOne()
                        .HasForeignKey("Category", "FoodId");
                });

            modelBuilder.Entity("ClubDrawback", b =>
                {
                    b.HasOne("BeaversDB.Model.Club", null)
                        .WithMany()
                        .HasForeignKey("ClubsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeaversDB.Model.Drawback", null)
                        .WithMany()
                        .HasForeignKey("DrawbacksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DrawbackFood", b =>
                {
                    b.HasOne("BeaversDB.Model.Drawback", null)
                        .WithMany()
                        .HasForeignKey("DrawbacksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeaversDB.Model.Food", null)
                        .WithMany()
                        .HasForeignKey("FoodsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.HasOne("Category", null)
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });

            modelBuilder.Entity("BeaversDB.Model.Beaver", b =>
                {
                    b.HasOne("BeaversDB.Model.Animal", null)
                        .WithOne()
                        .HasForeignKey("BeaversDB.Model.Beaver", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeaversDB.Model.Crow", b =>
                {
                    b.HasOne("BeaversDB.Model.Animal", null)
                        .WithOne()
                        .HasForeignKey("BeaversDB.Model.Crow", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeaversDB.Model.Deer", b =>
                {
                    b.HasOne("BeaversDB.Model.Animal", null)
                        .WithOne()
                        .HasForeignKey("BeaversDB.Model.Deer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeaversDB.Model.AdditionalInfo", b =>
                {
                    b.Navigation("AdditionalInfoDetailed")
                        .IsRequired();

                    b.Navigation("Grades");
                });

            modelBuilder.Entity("BeaversDB.Model.Animal", b =>
                {
                    b.Navigation("Food");

                    b.Navigation("Grades");
                });

            modelBuilder.Entity("BeaversDB.Model.Club", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("BeaversDB.Model.Drawback", b =>
                {
                    b.Navigation("JobDrawbacks");
                });

            modelBuilder.Entity("BeaversDB.Model.Job", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("JobDrawbacks");
                });

            modelBuilder.Entity("BeaversDB.Model.Person", b =>
                {
                    b.Navigation("AnimalsHated");

                    b.Navigation("AnimalsLoved");
                });

            modelBuilder.Entity("BeaversDB.Model.Deer", b =>
                {
                    b.Navigation("Elves");
                });
#pragma warning restore 612, 618
        }
    }
}
